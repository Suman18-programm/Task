@Service
public class UserService {

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private ManagerRepository managerRepository;

    public String createUser(User user) {
        // Validation: Full Name, Mobile Number, PAN, Manager ID
        // Validate mobile number (if country code is present, strip it)
        // Ensure PAN is uppercase
        // Check manager existence
        if (!isValidMobile(user.getMobNum())) {
            return "Invalid mobile number";
        }
        if (!isValidPAN(user.getPanNum())) {
            return "Invalid PAN number";
        }
        Optional<Manager> managerOpt = managerRepository.findById(user.getManagerId());
        if (managerOpt.isEmpty()) {
            return "Invalid Manager ID";
        }

        user.setCreatedAt(LocalDateTime.now());
        user.setUpdatedAt(LocalDateTime.now());
        user.setIsActive(true);

        userRepository.save(user);
        return "User created successfully";
    }

    private boolean isValidMobile(String mobNum) {
        // Validate mobile number
        return mobNum.matches("\\d{10}");
    }

    private boolean isValidPAN(String panNum) {
        // Validate PAN number
        return panNum.matches("[A-Z]{5}[0-9]{4}[A-Z]{1}");
    }
}
